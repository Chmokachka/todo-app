# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build
      env:
        CI: false
    - name: check sha
      run: |
        SHA=${{ github.sha }}
        echo $SHA
    # - uses: actions/upload-artifact@v2
    #   if: always()
    #   with:
    #     name: my-artifact
    #     path: /home/runner/work/todo-app/todo-app

  # check:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: my-artifact

  #     - name: check pwd
  #       run: |
  #         pwd
  #         ls -la

  # docker:
    
  #   runs-on: ubuntu-latest
  #   needs: [build]

  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: my-artifact

  #     - name: check dir
  #       run: ls -la

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
      
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         build-args: |
  #           mongo_uri="${{ secrets.MONGO_URI }}"
  #         context: ./
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest